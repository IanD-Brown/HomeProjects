#include <cassert>
#include <iostream>
#include <algorithm>
#include <map>

#include "day6Solver.h"

using namespace std;

enum Direction {UP, RIGHT, DOWN, LEFT};

struct Guard {
  int m_row;
  int m_col;
  Direction m_direction;
  int m_rowMove;
  int m_colMove;
  map<coordinate, set<Direction>> m_visits;

  void setStart(int row, int col) {
      m_row = row;
    m_col = col;
    m_visits.clear();
	m_direction = UP;
    m_rowMove = -1;
    m_colMove = 0;
  }

  bool move(size_t rowLimit, size_t colLimit, set<coordinate>& blocks) {
    while (m_row >= 0 && m_row < rowLimit && m_col >= 0 && m_col < colLimit) {
		auto coord = make_pair(m_row, m_col);
		auto fnd = m_visits.find(coord);
		if (fnd != m_visits.end() ) {
			if ( fnd->second.find(m_direction) != fnd->second.end() ) {
				return true;
			}
			fnd->second.insert(m_direction);
		} else {
			m_visits[ coord ] = { m_direction };
		}
		int blocked = 0;
		for ( int i = 0; i < 4; ++i ) {
			auto fnd = blocks.find(make_pair(m_row + m_rowMove, m_col + m_colMove));

			if ( fnd == blocks.end() ) {
				break;
			}
			++blocked;
			turnRight();
		}
      m_row += m_rowMove;
      m_col += m_colMove;
    }
	return false;
  }

  void turnRight() {
	  switch ( m_direction ) {
	  case UP:
		  m_rowMove = 0;
		  m_colMove = 1;
		  m_direction = RIGHT;
		  break;
	  case RIGHT:
		  m_rowMove = 1;
		  m_colMove = 0;
		  m_direction = DOWN;
		  break;
	  case DOWN:
		  m_rowMove = 0;
		  m_colMove = -1;
		  m_direction = LEFT;
		  break;
	  case LEFT:
		  m_rowMove = -1;
		  m_colMove = 0;
		  m_direction = UP;
		  break;
	  }
  }
};

static Guard s_guard;

day6Solver::day6Solver(const string& testFile) : solver(testFile), m_rowCount(0) {
}

void day6Solver::loadData(const string& line) {
  assert(m_blocks.empty() || line.size() == m_colCount);
  size_t offset = 0;
  size_t pos;

  while ((pos = line.find("#", offset)) != string::npos) {
    m_blocks.insert(make_pair((int)m_rowCount, (int)pos));
    offset = pos + 1;
  }
  pos = line.find("^");
  if (pos != string::npos) {
    s_guard.setStart((int)m_rowCount, (int)pos);
  }
  ++m_rowCount;
  m_colCount = line.size();
}

void day6Solver::clearData() {
  m_blocks.clear();
  m_rowCount = 0;
}

solveResult day6Solver::compute() {
  s_guard.move(m_rowCount, m_colCount, m_blocks);
  return  (long)s_guard.m_visits.size();
}

solveResult day6Solver::compute2() {
    long t = 0;
	int startRow = s_guard.m_row;
	int startCol = s_guard.m_col;
	s_guard.move(m_rowCount, m_colCount, m_blocks);

	set<coordinate> path;
	for ( auto& visited : s_guard.m_visits ) {
		path.insert(visited.first);
	}

	for ( auto& newBlock : path ) {
		m_blocks.insert(newBlock);
		s_guard.setStart(startRow, startCol);
		if ( s_guard.move(m_rowCount, m_colCount, m_blocks) ) {
			++t;
			if ( t % 100 == 0 ) {
				cout << "loop " << t << endl;
			}
		}
		m_blocks.erase(newBlock);
	}
	//for ( int r = 0; r < m_rowCount; ++r ) {
	//	for ( int c = 0; c < m_colCount; ++c ) {
	//		if ( r == startRow && c == startCol ) {
	//			continue;
	//		}
	//		auto coord = make_pair(r, c);

	//		if ( m_blocks.find(coord) == m_blocks.end() ) {
	//			m_blocks.insert(coord);
	//			s_guard.setStart(startRow, startCol);
	//			if ( s_guard.move(m_rowCount, m_colCount, m_blocks) ) {
	//				++t;
	//			}
	//			m_blocks.erase(coord);
	//		}
	//	}
	// }

    return t;
}

void day6Solver::loadTestData() {
  clearData();
    loadData("....#.....");
    loadData(".........#");
    loadData("..........");
    loadData("..#.......");
    loadData(".......#..");
    loadData("..........");
    loadData(".#..^.....");
    loadData("........#.");
    loadData("#.........");
    loadData("......#...");
}

set<coordinate> it() {
	set<coordinate> result;
	result.insert(make_pair(0, 19));
		result.insert(make_pair(1, 20));
		result.insert(make_pair(1, 29));
		result.insert(make_pair(1, 30));
		result.insert(make_pair(1, 33));
		result.insert(make_pair(1, 41));
		result.insert(make_pair(1, 42));
		result.insert(make_pair(1, 43));
		result.insert(make_pair(1, 45));
		result.insert(make_pair(1, 52));
		result.insert(make_pair(1, 62));
		result.insert(make_pair(1, 67));
		result.insert(make_pair(1, 69));
		result.insert(make_pair(1, 78));
		result.insert(make_pair(1, 80));
		result.insert(make_pair(1, 88));
		result.insert(make_pair(2, 19));
		result.insert(make_pair(3, 26));
		result.insert(make_pair(3, 27));
		result.insert(make_pair(3, 29));
		result.insert(make_pair(3, 30));
		result.insert(make_pair(3, 31));
		result.insert(make_pair(3, 33));
		result.insert(make_pair(3, 41));
		result.insert(make_pair(3, 42));
		result.insert(make_pair(3, 43));
		result.insert(make_pair(3, 45));
		result.insert(make_pair(3, 47));
		result.insert(make_pair(3, 49));
		result.insert(make_pair(3, 52));
		result.insert(make_pair(6, 9));
		result.insert(make_pair(6, 19));
		result.insert(make_pair(6, 25));
		result.insert(make_pair(6, 37));
		result.insert(make_pair(6, 38));
		result.insert(make_pair(6, 41));
		result.insert(make_pair(6, 42));
		result.insert(make_pair(7, 19));
		result.insert(make_pair(7, 25));
		result.insert(make_pair(7, 55));
		result.insert(make_pair(8, 9));
		result.insert(make_pair(8, 19));
		result.insert(make_pair(8, 25));
		result.insert(make_pair(8, 37));
		result.insert(make_pair(8, 74));
		result.insert(make_pair(8, 78));
		result.insert(make_pair(8, 79));
		result.insert(make_pair(8, 80));
		result.insert(make_pair(8, 81));
		result.insert(make_pair(8, 89));
		result.insert(make_pair(8, 95));
		result.insert(make_pair(8, 104));
		result.insert(make_pair(8, 109));
		result.insert(make_pair(8, 113));
		result.insert(make_pair(9, 20));
		result.insert(make_pair(9, 25));
		result.insert(make_pair(9, 26));
		result.insert(make_pair(9, 29));
		result.insert(make_pair(9, 30));
		result.insert(make_pair(9, 38));
		result.insert(make_pair(9, 41));
		result.insert(make_pair(9, 42));
		result.insert(make_pair(9, 45));
		result.insert(make_pair(9, 48));
		result.insert(make_pair(9, 52));
		result.insert(make_pair(9, 54));
		result.insert(make_pair(9, 57));
		result.insert(make_pair(9, 62));
		result.insert(make_pair(9, 67));
		result.insert(make_pair(9, 68));
		result.insert(make_pair(9, 78));
		result.insert(make_pair(9, 80));
		result.insert(make_pair(10, 19));
		result.insert(make_pair(10, 25));
		result.insert(make_pair(11, 12));
		result.insert(make_pair(11, 20));
		result.insert(make_pair(11, 25));
		result.insert(make_pair(11, 48));
		result.insert(make_pair(11, 52));
		result.insert(make_pair(11, 55));
		result.insert(make_pair(11, 59));
		result.insert(make_pair(11, 61));
		result.insert(make_pair(11, 66));
		result.insert(make_pair(12, 26));
		result.insert(make_pair(12, 29));
		result.insert(make_pair(12, 30));
		result.insert(make_pair(12, 32));
		result.insert(make_pair(12, 41));
		result.insert(make_pair(12, 42));
		result.insert(make_pair(12, 57));
		result.insert(make_pair(12, 62));
		result.insert(make_pair(12, 68));
		result.insert(make_pair(12, 78));
		result.insert(make_pair(13, 19));
		result.insert(make_pair(13, 21));
		result.insert(make_pair(13, 25));
		result.insert(make_pair(13, 42));
		result.insert(make_pair(13, 55));
		result.insert(make_pair(13, 74));
		result.insert(make_pair(14, 19));
		result.insert(make_pair(14, 25));
		result.insert(make_pair(14, 57));
		result.insert(make_pair(14, 62));
		result.insert(make_pair(14, 78));
		result.insert(make_pair(14, 94));
		result.insert(make_pair(14, 109));
		result.insert(make_pair(14, 113));
		result.insert(make_pair(14, 115));
		result.insert(make_pair(14, 119));
		result.insert(make_pair(15, 22));
		result.insert(make_pair(15, 24));
		result.insert(make_pair(15, 25));
		result.insert(make_pair(15, 26));
		result.insert(make_pair(15, 30));
		result.insert(make_pair(15, 33));
		result.insert(make_pair(15, 34));
		result.insert(make_pair(15, 35));
		result.insert(make_pair(15, 36));
		result.insert(make_pair(15, 48));
		result.insert(make_pair(15, 52));
		result.insert(make_pair(16, 25));
		result.insert(make_pair(17, 12));
		result.insert(make_pair(17, 21));
		result.insert(make_pair(17, 25));
		result.insert(make_pair(17, 27));
		result.insert(make_pair(17, 28));
		result.insert(make_pair(17, 29));
		result.insert(make_pair(17, 30));
		result.insert(make_pair(17, 32));
		result.insert(make_pair(17, 33));
		result.insert(make_pair(17, 37));
		result.insert(make_pair(17, 38));
		result.insert(make_pair(17, 41));
		result.insert(make_pair(17, 43));
		result.insert(make_pair(17, 44));
		result.insert(make_pair(17, 45));
		result.insert(make_pair(17, 47));
		result.insert(make_pair(17, 48));
		result.insert(make_pair(17, 49));
		result.insert(make_pair(17, 51));
		result.insert(make_pair(17, 52));
		result.insert(make_pair(17, 56));
		result.insert(make_pair(17, 57));
		result.insert(make_pair(17, 60));
		result.insert(make_pair(17, 62));
		result.insert(make_pair(17, 63));
		result.insert(make_pair(17, 64));
		result.insert(make_pair(17, 66));
		result.insert(make_pair(17, 67));
		result.insert(make_pair(17, 68));
		result.insert(make_pair(17, 69));
		result.insert(make_pair(17, 73));
		result.insert(make_pair(17, 75));
		result.insert(make_pair(17, 76));
		result.insert(make_pair(17, 79));
		result.insert(make_pair(17, 88));
		result.insert(make_pair(18, 25));
		result.insert(make_pair(18, 26));
		result.insert(make_pair(18, 28));
		result.insert(make_pair(18, 29));
		result.insert(make_pair(18, 30));
		result.insert(make_pair(18, 32));
		result.insert(make_pair(18, 41));
		result.insert(make_pair(18, 42));
		result.insert(make_pair(18, 74));
		result.insert(make_pair(19, 21));
		result.insert(make_pair(19, 25));
		result.insert(make_pair(19, 27));
		result.insert(make_pair(19, 42));
		result.insert(make_pair(19, 80));
		result.insert(make_pair(19, 83));
		result.insert(make_pair(20, 76));
		result.insert(make_pair(20, 113));
		result.insert(make_pair(20, 119));
		result.insert(make_pair(21, 25));
		result.insert(make_pair(21, 27));
		result.insert(make_pair(21, 113));
		result.insert(make_pair(21, 119));
		result.insert(make_pair(22, 6));
		result.insert(make_pair(22, 9));
		result.insert(make_pair(22, 12));
		result.insert(make_pair(22, 19));
		result.insert(make_pair(22, 23));
		result.insert(make_pair(22, 26));
		result.insert(make_pair(22, 27));
		result.insert(make_pair(22, 30));
		result.insert(make_pair(22, 33));
		result.insert(make_pair(22, 34));
		result.insert(make_pair(22, 35));
		result.insert(make_pair(22, 44));
		result.insert(make_pair(22, 48));
		result.insert(make_pair(22, 52));
		result.insert(make_pair(22, 53));
		result.insert(make_pair(22, 54));
		result.insert(make_pair(22, 55));
		result.insert(make_pair(22, 57));
		result.insert(make_pair(22, 63));
		result.insert(make_pair(22, 64));
		result.insert(make_pair(22, 65));
		result.insert(make_pair(22, 66));
		result.insert(make_pair(22, 68));
		result.insert(make_pair(22, 70));
		result.insert(make_pair(22, 72));
		result.insert(make_pair(22, 73));
		result.insert(make_pair(23, 19));
		result.insert(make_pair(23, 23));
		result.insert(make_pair(23, 27));
		result.insert(make_pair(24, 41));
		result.insert(make_pair(24, 42));
		result.insert(make_pair(24, 55));
		result.insert(make_pair(24, 56));
		result.insert(make_pair(24, 57));
		result.insert(make_pair(24, 59));
		result.insert(make_pair(24, 62));
		result.insert(make_pair(24, 65));
		result.insert(make_pair(24, 68));
		result.insert(make_pair(24, 76));
		result.insert(make_pair(24, 94));
		result.insert(make_pair(24, 103));
		result.insert(make_pair(24, 104));
		result.insert(make_pair(24, 113));
		result.insert(make_pair(24, 115));
		result.insert(make_pair(25, 6));
		result.insert(make_pair(25, 9));
		result.insert(make_pair(25, 27));
		result.insert(make_pair(26, 21));
		result.insert(make_pair(26, 25));
		result.insert(make_pair(26, 26));
		result.insert(make_pair(26, 27));
		result.insert(make_pair(26, 28));
		result.insert(make_pair(26, 29));
		result.insert(make_pair(26, 32));
		result.insert(make_pair(26, 41));
		result.insert(make_pair(26, 43));
		result.insert(make_pair(26, 45));
		result.insert(make_pair(26, 48));
		result.insert(make_pair(26, 52));
		result.insert(make_pair(26, 55));
		result.insert(make_pair(26, 56));
		result.insert(make_pair(26, 57));
		result.insert(make_pair(26, 59));
		result.insert(make_pair(26, 62));
		result.insert(make_pair(26, 63));
		result.insert(make_pair(26, 65));
		result.insert(make_pair(26, 68));
		result.insert(make_pair(26, 72));
		result.insert(make_pair(26, 76));
		result.insert(make_pair(26, 78));
		result.insert(make_pair(26, 80));
		result.insert(make_pair(26, 88));
		result.insert(make_pair(26, 89));
		result.insert(make_pair(26, 94));
		result.insert(make_pair(26, 95));
		result.insert(make_pair(26, 103));
		result.insert(make_pair(26, 104));
		result.insert(make_pair(27, 6));
		result.insert(make_pair(27, 9));
		result.insert(make_pair(27, 12));
		result.insert(make_pair(27, 16));
		result.insert(make_pair(27, 19));
		result.insert(make_pair(27, 23));
		result.insert(make_pair(27, 27));
		result.insert(make_pair(27, 30));
		result.insert(make_pair(27, 53));
		result.insert(make_pair(28, 27));
		result.insert(make_pair(28, 41));
		result.insert(make_pair(28, 42));
		result.insert(make_pair(28, 55));
		result.insert(make_pair(28, 56));
		result.insert(make_pair(28, 57));
		result.insert(make_pair(28, 62));
		result.insert(make_pair(28, 65));
		result.insert(make_pair(28, 94));
		result.insert(make_pair(29, 19));
		result.insert(make_pair(29, 23));
		result.insert(make_pair(30, 19));
		result.insert(make_pair(30, 23));
		result.insert(make_pair(30, 27));
		result.insert(make_pair(30, 30));
		result.insert(make_pair(30, 42));
		result.insert(make_pair(30, 44));
		result.insert(make_pair(30, 53));
		result.insert(make_pair(30, 110));
		result.insert(make_pair(30, 113));
		result.insert(make_pair(30, 116));
		result.insert(make_pair(30, 119));
		result.insert(make_pair(31, 6));
		result.insert(make_pair(31, 9));
		result.insert(make_pair(31, 12));
		result.insert(make_pair(31, 16));
		result.insert(make_pair(31, 19));
		result.insert(make_pair(31, 21));
		result.insert(make_pair(31, 23));
		result.insert(make_pair(31, 27));
		result.insert(make_pair(31, 42));
		result.insert(make_pair(31, 44));
		result.insert(make_pair(31, 106));
		result.insert(make_pair(31, 110));
		result.insert(make_pair(31, 113));
		result.insert(make_pair(31, 116));
		result.insert(make_pair(31, 119));
		result.insert(make_pair(32, 6));
		result.insert(make_pair(32, 9));
		result.insert(make_pair(32, 21));
		result.insert(make_pair(32, 27));
		result.insert(make_pair(32, 42));
		result.insert(make_pair(32, 44));
		result.insert(make_pair(32, 94));
		result.insert(make_pair(32, 96));
		result.insert(make_pair(32, 98));
		result.insert(make_pair(32, 103));
		result.insert(make_pair(32, 104));
		result.insert(make_pair(32, 107));
		result.insert(make_pair(33, 6));
		result.insert(make_pair(33, 9));
		result.insert(make_pair(33, 12));
		result.insert(make_pair(33, 16));
		result.insert(make_pair(33, 19));
		result.insert(make_pair(33, 23));
		result.insert(make_pair(33, 27));
		result.insert(make_pair(33, 28));
		result.insert(make_pair(33, 30));
		result.insert(make_pair(33, 32));
		result.insert(make_pair(33, 39));
		result.insert(make_pair(33, 110));
		result.insert(make_pair(33, 113));
		result.insert(make_pair(33, 116));
		result.insert(make_pair(33, 119));
		result.insert(make_pair(34, 6));
		result.insert(make_pair(34, 9));
		result.insert(make_pair(34, 12));
		result.insert(make_pair(34, 16));
		result.insert(make_pair(34, 19));
		result.insert(make_pair(34, 21));
		result.insert(make_pair(34, 23));
		result.insert(make_pair(34, 27));
		result.insert(make_pair(34, 28));
		result.insert(make_pair(34, 30));
		result.insert(make_pair(34, 42));
		result.insert(make_pair(34, 43));
		result.insert(make_pair(34, 53));
		result.insert(make_pair(34, 56));
		result.insert(make_pair(34, 57));
		result.insert(make_pair(34, 62));
		result.insert(make_pair(34, 65));
		result.insert(make_pair(34, 68));
		result.insert(make_pair(34, 107));
		result.insert(make_pair(34, 110));
		result.insert(make_pair(34, 113));
		result.insert(make_pair(34, 116));
		result.insert(make_pair(34, 119));
		result.insert(make_pair(35, 6));
		result.insert(make_pair(35, 9));
		result.insert(make_pair(35, 12));
		result.insert(make_pair(35, 16));
		result.insert(make_pair(35, 19));
		result.insert(make_pair(35, 23));
		result.insert(make_pair(35, 27));
		result.insert(make_pair(35, 28));
		result.insert(make_pair(35, 30));
		result.insert(make_pair(35, 43));
		result.insert(make_pair(35, 90));
		result.insert(make_pair(36, 19));
		result.insert(make_pair(36, 27));
		result.insert(make_pair(36, 28));
		result.insert(make_pair(36, 70));
		result.insert(make_pair(36, 71));
		result.insert(make_pair(36, 94));
		result.insert(make_pair(36, 100));
		result.insert(make_pair(36, 103));
		result.insert(make_pair(36, 106));
		result.insert(make_pair(36, 107));
		result.insert(make_pair(36, 110));
		result.insert(make_pair(36, 113));
		result.insert(make_pair(36, 116));
		result.insert(make_pair(36, 119));
		result.insert(make_pair(37, 21));
		result.insert(make_pair(37, 27));
		result.insert(make_pair(37, 107));
		result.insert(make_pair(37, 110));
		result.insert(make_pair(38, 12));
		result.insert(make_pair(38, 16));
		result.insert(make_pair(38, 19));
		result.insert(make_pair(38, 21));
		result.insert(make_pair(38, 23));
		result.insert(make_pair(38, 27));
		result.insert(make_pair(38, 28));
		result.insert(make_pair(38, 30));
		result.insert(make_pair(38, 32));
		result.insert(make_pair(38, 42));
		result.insert(make_pair(38, 43));
		result.insert(make_pair(38, 44));
		result.insert(make_pair(38, 48));
		result.insert(make_pair(38, 50));
		result.insert(make_pair(38, 52));
		result.insert(make_pair(38, 70));
		result.insert(make_pair(38, 72));
		result.insert(make_pair(38, 74));
		result.insert(make_pair(38, 76));
		result.insert(make_pair(38, 77));
		result.insert(make_pair(38, 78));
		result.insert(make_pair(38, 80));
		result.insert(make_pair(38, 81));
		result.insert(make_pair(38, 82));
		result.insert(make_pair(38, 84));
		result.insert(make_pair(38, 86));
		result.insert(make_pair(38, 89));
		result.insert(make_pair(38, 90));
		result.insert(make_pair(38, 93));
		result.insert(make_pair(38, 94));
		result.insert(make_pair(38, 96));
		result.insert(make_pair(38, 103));
		result.insert(make_pair(38, 107));
		result.insert(make_pair(38, 110));
		result.insert(make_pair(38, 113));
		result.insert(make_pair(38, 116));
		result.insert(make_pair(39, 27));
		result.insert(make_pair(39, 32));
		result.insert(make_pair(39, 42));
		result.insert(make_pair(39, 44));
		result.insert(make_pair(39, 54));
		result.insert(make_pair(39, 62));
		result.insert(make_pair(39, 68));
		result.insert(make_pair(39, 72));
		result.insert(make_pair(39, 94));
		result.insert(make_pair(39, 96));
		result.insert(make_pair(39, 103));
		result.insert(make_pair(39, 107));
		result.insert(make_pair(39, 110));
		result.insert(make_pair(39, 113));
		result.insert(make_pair(39, 116));
		result.insert(make_pair(39, 119));
		result.insert(make_pair(40, 6));
		result.insert(make_pair(40, 9));
		result.insert(make_pair(40, 12));
		result.insert(make_pair(40, 16));
		result.insert(make_pair(40, 19));
		result.insert(make_pair(40, 21));
		result.insert(make_pair(40, 27));
		result.insert(make_pair(40, 32));
		result.insert(make_pair(40, 42));
		result.insert(make_pair(40, 48));
		result.insert(make_pair(40, 54));
		result.insert(make_pair(40, 72));
		result.insert(make_pair(40, 90));
		result.insert(make_pair(40, 96));
		result.insert(make_pair(41, 21));
		result.insert(make_pair(41, 27));
		result.insert(make_pair(41, 29));
		result.insert(make_pair(41, 32));
		result.insert(make_pair(41, 33));
		result.insert(make_pair(41, 34));
		result.insert(make_pair(41, 35));
		result.insert(make_pair(41, 38));
		result.insert(make_pair(41, 39));
		result.insert(make_pair(41, 40));
		result.insert(make_pair(41, 42));
		result.insert(make_pair(41, 44));
		result.insert(make_pair(41, 45));
		result.insert(make_pair(41, 47));
		result.insert(make_pair(41, 48));
		result.insert(make_pair(41, 50));
		result.insert(make_pair(41, 52));
		result.insert(make_pair(41, 53));
		result.insert(make_pair(41, 55));
		result.insert(make_pair(41, 56));
		result.insert(make_pair(41, 57));
		result.insert(make_pair(41, 63));
		result.insert(make_pair(41, 64));
		result.insert(make_pair(41, 65));
		result.insert(make_pair(41, 66));
		result.insert(make_pair(41, 68));
		result.insert(make_pair(41, 69));
		result.insert(make_pair(41, 70));
		result.insert(make_pair(41, 71));
		result.insert(make_pair(41, 72));
		result.insert(make_pair(41, 73));
		result.insert(make_pair(41, 76));
		result.insert(make_pair(41, 80));
		result.insert(make_pair(41, 81));
		result.insert(make_pair(41, 82));
		result.insert(make_pair(41, 83));
		result.insert(make_pair(41, 84));
		result.insert(make_pair(41, 87));
		result.insert(make_pair(41, 88));
		result.insert(make_pair(41, 89));
		result.insert(make_pair(41, 90));
		result.insert(make_pair(41, 91));
		result.insert(make_pair(41, 92));
		result.insert(make_pair(41, 95));
		result.insert(make_pair(41, 106));
		result.insert(make_pair(41, 107));
		result.insert(make_pair(41, 110));
		result.insert(make_pair(41, 113));
		result.insert(make_pair(42, 6));
		result.insert(make_pair(42, 9));
		result.insert(make_pair(42, 21));
		result.insert(make_pair(42, 48));
		result.insert(make_pair(42, 72));
		result.insert(make_pair(42, 90));
		result.insert(make_pair(42, 103));
		result.insert(make_pair(42, 107));
		result.insert(make_pair(42, 113));
		result.insert(make_pair(42, 116));
		result.insert(make_pair(43, 37));
		result.insert(make_pair(43, 40));
		result.insert(make_pair(43, 41));
		result.insert(make_pair(43, 45));
		result.insert(make_pair(43, 48));
		result.insert(make_pair(43, 50));
		result.insert(make_pair(43, 58));
		result.insert(make_pair(43, 59));
		result.insert(make_pair(43, 62));
		result.insert(make_pair(43, 63));
		result.insert(make_pair(43, 65));
		result.insert(make_pair(43, 68));
		result.insert(make_pair(43, 69));
		result.insert(make_pair(43, 71));
		result.insert(make_pair(43, 72));
		result.insert(make_pair(43, 74));
		result.insert(make_pair(43, 75));
		result.insert(make_pair(43, 76));
		result.insert(make_pair(43, 77));
		result.insert(make_pair(43, 79));
		result.insert(make_pair(43, 81));
		result.insert(make_pair(43, 84));
		result.insert(make_pair(43, 94));
		result.insert(make_pair(43, 99));
		result.insert(make_pair(43, 103));
		result.insert(make_pair(43, 107));
		result.insert(make_pair(43, 110));
		result.insert(make_pair(43, 113));
		result.insert(make_pair(43, 116));
		result.insert(make_pair(44, 6));
		result.insert(make_pair(44, 21));
		result.insert(make_pair(44, 32));
		result.insert(make_pair(44, 42));
		result.insert(make_pair(44, 44));
		result.insert(make_pair(44, 54));
		result.insert(make_pair(44, 72));
		result.insert(make_pair(44, 79));
		result.insert(make_pair(44, 90));
		result.insert(make_pair(44, 95));
		result.insert(make_pair(44, 99));
		result.insert(make_pair(44, 103));
		result.insert(make_pair(44, 107));
		result.insert(make_pair(44, 110));
		result.insert(make_pair(44, 113));
		result.insert(make_pair(44, 116));
		result.insert(make_pair(45, 72));
		result.insert(make_pair(45, 103));
		result.insert(make_pair(45, 107));
		result.insert(make_pair(45, 113));
		result.insert(make_pair(45, 116));
		result.insert(make_pair(45, 119));
		result.insert(make_pair(46, 6));
		result.insert(make_pair(46, 9));
		result.insert(make_pair(46, 36));
		result.insert(make_pair(46, 48));
		result.insert(make_pair(46, 72));
		result.insert(make_pair(46, 78));
		result.insert(make_pair(46, 80));
		result.insert(make_pair(46, 81));
		result.insert(make_pair(46, 84));
		result.insert(make_pair(46, 89));
		result.insert(make_pair(46, 90));
		result.insert(make_pair(46, 94));
		result.insert(make_pair(46, 96));
		result.insert(make_pair(46, 99));
		result.insert(make_pair(46, 100));
		result.insert(make_pair(46, 101));
		result.insert(make_pair(46, 102));
		result.insert(make_pair(46, 103));
		result.insert(make_pair(46, 104));
		result.insert(make_pair(46, 106));
		result.insert(make_pair(46, 107));
		result.insert(make_pair(46, 108));
		result.insert(make_pair(46, 110));
		result.insert(make_pair(46, 111));
		result.insert(make_pair(46, 113));
		result.insert(make_pair(46, 116));
		result.insert(make_pair(47, 21));
		result.insert(make_pair(47, 25));
		result.insert(make_pair(47, 26));
		result.insert(make_pair(47, 32));
		result.insert(make_pair(47, 33));
		result.insert(make_pair(47, 37));
		result.insert(make_pair(47, 41));
		result.insert(make_pair(47, 45));
		result.insert(make_pair(47, 48));
		result.insert(make_pair(47, 50));
		result.insert(make_pair(47, 56));
		result.insert(make_pair(47, 58));
		result.insert(make_pair(47, 59));
		result.insert(make_pair(47, 62));
		result.insert(make_pair(47, 63));
		result.insert(make_pair(47, 65));
		result.insert(make_pair(47, 68));
		result.insert(make_pair(47, 113));
		result.insert(make_pair(47, 116));
		result.insert(make_pair(48, 21));
		result.insert(make_pair(48, 32));
		result.insert(make_pair(48, 42));
		result.insert(make_pair(48, 44));
		result.insert(make_pair(48, 54));
		result.insert(make_pair(48, 68));
		result.insert(make_pair(48, 75));
		result.insert(make_pair(48, 79));
		result.insert(make_pair(48, 111));
		result.insert(make_pair(49, 9));
		result.insert(make_pair(49, 11));
		result.insert(make_pair(49, 14));
		result.insert(make_pair(49, 15));
		result.insert(make_pair(49, 17));
		result.insert(make_pair(49, 18));
		result.insert(make_pair(49, 21));
		result.insert(make_pair(49, 22));
		result.insert(make_pair(49, 24));
		result.insert(make_pair(49, 27));
		result.insert(make_pair(49, 29));
		result.insert(make_pair(49, 33));
		result.insert(make_pair(49, 34));
		result.insert(make_pair(49, 35));
		result.insert(make_pair(49, 38));
		result.insert(make_pair(49, 40));
		result.insert(make_pair(49, 45));
		result.insert(make_pair(49, 52));
		result.insert(make_pair(49, 55));
		result.insert(make_pair(49, 57));
		result.insert(make_pair(49, 62));
		result.insert(make_pair(49, 64));
		result.insert(make_pair(49, 65));
		result.insert(make_pair(49, 66));
		result.insert(make_pair(49, 69));
		result.insert(make_pair(49, 75));
		result.insert(make_pair(49, 76));
		result.insert(make_pair(49, 79));
		result.insert(make_pair(49, 82));
		result.insert(make_pair(49, 85));
		result.insert(make_pair(49, 87));
		result.insert(make_pair(49, 89));
		result.insert(make_pair(49, 90));
		result.insert(make_pair(49, 92));
		result.insert(make_pair(49, 95));
		result.insert(make_pair(49, 96));
		result.insert(make_pair(49, 98));
		result.insert(make_pair(49, 101));
		result.insert(make_pair(49, 102));
		result.insert(make_pair(49, 105));
		result.insert(make_pair(49, 106));
		result.insert(make_pair(49, 107));
		result.insert(make_pair(49, 111));
		result.insert(make_pair(49, 113));
		result.insert(make_pair(49, 116));
		result.insert(make_pair(49, 119));
		result.insert(make_pair(50, 21));
		result.insert(make_pair(50, 54));
		result.insert(make_pair(50, 90));
		result.insert(make_pair(50, 111));
		result.insert(make_pair(50, 113));
		result.insert(make_pair(51, 6));
		result.insert(make_pair(51, 10));
		result.insert(make_pair(51, 12));
		result.insert(make_pair(51, 16));
		result.insert(make_pair(51, 19));
		result.insert(make_pair(51, 23));
		result.insert(make_pair(51, 28));
		result.insert(make_pair(51, 30));
		result.insert(make_pair(51, 32));
		result.insert(make_pair(51, 36));
		result.insert(make_pair(51, 42));
		result.insert(make_pair(51, 43));
		result.insert(make_pair(51, 44));
		result.insert(make_pair(51, 48));
		result.insert(make_pair(51, 54));
		result.insert(make_pair(51, 56));
		result.insert(make_pair(51, 68));
		result.insert(make_pair(51, 70));
		result.insert(make_pair(51, 72));
		result.insert(make_pair(51, 78));
		result.insert(make_pair(51, 79));
		result.insert(make_pair(51, 90));
		result.insert(make_pair(52, 8));
		result.insert(make_pair(52, 9));
		result.insert(make_pair(52, 11));
		result.insert(make_pair(52, 14));
		result.insert(make_pair(52, 15));
		result.insert(make_pair(52, 17));
		result.insert(make_pair(52, 18));
		result.insert(make_pair(52, 22));
		result.insert(make_pair(52, 23));
		result.insert(make_pair(52, 24));
		result.insert(make_pair(52, 27));
		result.insert(make_pair(52, 29));
		result.insert(make_pair(52, 32));
		result.insert(make_pair(52, 33));
		result.insert(make_pair(52, 34));
		result.insert(make_pair(52, 35));
		result.insert(make_pair(52, 36));
		result.insert(make_pair(52, 38));
		result.insert(make_pair(52, 39));
		result.insert(make_pair(52, 40));
		result.insert(make_pair(52, 42));
		result.insert(make_pair(52, 44));
		result.insert(make_pair(52, 45));
		result.insert(make_pair(52, 47));
		result.insert(make_pair(52, 48));
		result.insert(make_pair(52, 52));
		result.insert(make_pair(52, 68));
		result.insert(make_pair(52, 110));
		result.insert(make_pair(52, 111));
		result.insert(make_pair(52, 113));
		result.insert(make_pair(52, 116));
		result.insert(make_pair(52, 119));
		result.insert(make_pair(53, 16));
		result.insert(make_pair(53, 19));
		result.insert(make_pair(53, 21));
		result.insert(make_pair(53, 23));
		result.insert(make_pair(53, 28));
		result.insert(make_pair(53, 30));
		result.insert(make_pair(53, 36));
		result.insert(make_pair(53, 39));
		result.insert(make_pair(53, 43));
		result.insert(make_pair(53, 48));
		result.insert(make_pair(53, 53));
		result.insert(make_pair(53, 56));
		result.insert(make_pair(53, 111));
		result.insert(make_pair(54, 17));
		result.insert(make_pair(54, 18));
		result.insert(make_pair(54, 21));
		result.insert(make_pair(54, 22));
		result.insert(make_pair(54, 24));
		result.insert(make_pair(54, 29));
		result.insert(make_pair(54, 32));
		result.insert(make_pair(54, 33));
		result.insert(make_pair(54, 38));
		result.insert(make_pair(54, 40));
		result.insert(make_pair(54, 42));
		result.insert(make_pair(54, 44));
		result.insert(make_pair(54, 68));
		result.insert(make_pair(54, 95));
		result.insert(make_pair(54, 103));
		result.insert(make_pair(54, 110));
		result.insert(make_pair(54, 111));
		result.insert(make_pair(54, 113));
		result.insert(make_pair(54, 116));
		result.insert(make_pair(54, 119));
		result.insert(make_pair(55, 21));
		result.insert(make_pair(55, 32));
		result.insert(make_pair(55, 95));
		result.insert(make_pair(55, 103));
		result.insert(make_pair(55, 110));
		result.insert(make_pair(55, 111));
		result.insert(make_pair(55, 113));
		result.insert(make_pair(55, 116));
		result.insert(make_pair(56, 10));
		result.insert(make_pair(56, 12));
		result.insert(make_pair(56, 19));
		result.insert(make_pair(56, 21));
		result.insert(make_pair(56, 23));
		result.insert(make_pair(56, 28));
		result.insert(make_pair(56, 30));
		result.insert(make_pair(56, 32));
		result.insert(make_pair(56, 36));
		result.insert(make_pair(56, 43));
		result.insert(make_pair(56, 44));
		result.insert(make_pair(56, 48));
		result.insert(make_pair(56, 53));
		result.insert(make_pair(56, 56));
		result.insert(make_pair(56, 68));
		result.insert(make_pair(56, 70));
		result.insert(make_pair(56, 72));
		result.insert(make_pair(56, 75));
		result.insert(make_pair(56, 78));
		result.insert(make_pair(56, 79));
		result.insert(make_pair(56, 95));
		result.insert(make_pair(56, 106));
		result.insert(make_pair(56, 110));
		result.insert(make_pair(56, 111));
		result.insert(make_pair(56, 113));
		result.insert(make_pair(56, 116));
		result.insert(make_pair(57, 19));
		result.insert(make_pair(57, 28));
		result.insert(make_pair(57, 48));
		result.insert(make_pair(57, 55));
		result.insert(make_pair(57, 63));
		result.insert(make_pair(57, 72));
		result.insert(make_pair(57, 90));
		result.insert(make_pair(58, 103));
		result.insert(make_pair(58, 106));
		result.insert(make_pair(58, 110));
		result.insert(make_pair(58, 111));
		result.insert(make_pair(58, 113));
		result.insert(make_pair(58, 116));
		result.insert(make_pair(59, 10));
		result.insert(make_pair(59, 12));
		result.insert(make_pair(59, 21));
		result.insert(make_pair(59, 32));
		result.insert(make_pair(59, 44));
		result.insert(make_pair(59, 48));
		result.insert(make_pair(59, 72));
		result.insert(make_pair(59, 78));
		result.insert(make_pair(59, 110));
		result.insert(make_pair(59, 111));
		result.insert(make_pair(59, 113));
		result.insert(make_pair(59, 116));
		result.insert(make_pair(60, 21));
		result.insert(make_pair(60, 32));
		result.insert(make_pair(60, 44));
		result.insert(make_pair(60, 48));
		result.insert(make_pair(60, 49));
		result.insert(make_pair(60, 52));
		result.insert(make_pair(60, 55));
		result.insert(make_pair(60, 57));
		result.insert(make_pair(60, 58));
		result.insert(make_pair(60, 66));
		result.insert(make_pair(60, 68));
		result.insert(make_pair(60, 69));
		result.insert(make_pair(60, 75));
		result.insert(make_pair(60, 76));
		result.insert(make_pair(60, 79));
		result.insert(make_pair(60, 80));
		result.insert(make_pair(60, 82));
		result.insert(make_pair(60, 83));
		result.insert(make_pair(60, 85));
		result.insert(make_pair(60, 87));
		result.insert(make_pair(60, 88));
		result.insert(make_pair(60, 89));
		result.insert(make_pair(60, 90));
		result.insert(make_pair(60, 91));
		result.insert(make_pair(60, 92));
		result.insert(make_pair(60, 93));
		result.insert(make_pair(60, 95));
		result.insert(make_pair(60, 96));
		result.insert(make_pair(60, 98));
		result.insert(make_pair(60, 100));
		result.insert(make_pair(60, 101));
		result.insert(make_pair(60, 102));
		result.insert(make_pair(60, 103));
		result.insert(make_pair(60, 104));
		result.insert(make_pair(60, 105));
		result.insert(make_pair(60, 106));
		result.insert(make_pair(60, 107));
		result.insert(make_pair(60, 108));
		result.insert(make_pair(60, 109));
		result.insert(make_pair(60, 110));
		result.insert(make_pair(60, 112));
		result.insert(make_pair(60, 113));
		result.insert(make_pair(61, 111));
		result.insert(make_pair(62, 21));
		result.insert(make_pair(62, 24));
		result.insert(make_pair(62, 29));
		result.insert(make_pair(62, 32));
		result.insert(make_pair(62, 33));
		result.insert(make_pair(62, 38));
		result.insert(make_pair(62, 42));
		result.insert(make_pair(62, 48));
		result.insert(make_pair(62, 49));
		result.insert(make_pair(62, 52));
		result.insert(make_pair(62, 55));
		result.insert(make_pair(62, 58));
		result.insert(make_pair(62, 69));
		result.insert(make_pair(62, 79));
		result.insert(make_pair(62, 80));
		result.insert(make_pair(62, 82));
		result.insert(make_pair(62, 85));
		result.insert(make_pair(62, 88));
		result.insert(make_pair(62, 92));
		result.insert(make_pair(62, 96));
		result.insert(make_pair(62, 98));
		result.insert(make_pair(62, 99));
		result.insert(make_pair(62, 100));
		result.insert(make_pair(62, 101));
		result.insert(make_pair(62, 102));
		result.insert(make_pair(62, 103));
		result.insert(make_pair(62, 104));
		result.insert(make_pair(62, 105));
		result.insert(make_pair(62, 107));
		result.insert(make_pair(62, 108));
		result.insert(make_pair(62, 109));
		result.insert(make_pair(63, 21));
		result.insert(make_pair(63, 29));
		result.insert(make_pair(63, 32));
		result.insert(make_pair(63, 33));
		result.insert(make_pair(63, 38));
		result.insert(make_pair(63, 42));
		result.insert(make_pair(63, 44));
		result.insert(make_pair(63, 48));
		result.insert(make_pair(63, 49));
		result.insert(make_pair(63, 52));
		result.insert(make_pair(63, 55));
		result.insert(make_pair(63, 57));
		result.insert(make_pair(63, 58));
		result.insert(make_pair(63, 66));
		result.insert(make_pair(63, 69));
		result.insert(make_pair(63, 75));
		result.insert(make_pair(63, 79));
		result.insert(make_pair(63, 80));
		result.insert(make_pair(63, 82));
		result.insert(make_pair(63, 83));
		result.insert(make_pair(63, 85));
		result.insert(make_pair(63, 88));
		result.insert(make_pair(63, 90));
		result.insert(make_pair(63, 92));
		result.insert(make_pair(63, 96));
		result.insert(make_pair(63, 98));
		result.insert(make_pair(63, 100));
		result.insert(make_pair(63, 101));
		result.insert(make_pair(63, 102));
		result.insert(make_pair(63, 104));
		result.insert(make_pair(63, 105));
		result.insert(make_pair(63, 107));
		result.insert(make_pair(63, 108));
		result.insert(make_pair(63, 109));
		result.insert(make_pair(63, 110));
		result.insert(make_pair(63, 111));
		result.insert(make_pair(64, 32));
		result.insert(make_pair(64, 36));
		result.insert(make_pair(64, 68));
		result.insert(make_pair(64, 72));
		result.insert(make_pair(64, 78));
		result.insert(make_pair(64, 90));
		result.insert(make_pair(64, 95));
		result.insert(make_pair(64, 111));
		result.insert(make_pair(65, 21));
		result.insert(make_pair(65, 32));
		result.insert(make_pair(65, 37));
		result.insert(make_pair(65, 40));
		result.insert(make_pair(65, 41));
		result.insert(make_pair(65, 42));
		result.insert(make_pair(65, 44));
		result.insert(make_pair(65, 45));
		result.insert(make_pair(65, 48));
		result.insert(make_pair(65, 50));
		result.insert(make_pair(65, 52));
		result.insert(make_pair(65, 55));
		result.insert(make_pair(65, 58));
		result.insert(make_pair(65, 59));
		result.insert(make_pair(65, 62));
		result.insert(make_pair(65, 63));
		result.insert(make_pair(65, 64));
		result.insert(make_pair(65, 65));
		result.insert(make_pair(65, 67));
		result.insert(make_pair(65, 68));
		result.insert(make_pair(65, 69));
		result.insert(make_pair(65, 71));
		result.insert(make_pair(65, 72));
		result.insert(make_pair(65, 74));
		result.insert(make_pair(65, 75));
		result.insert(make_pair(65, 76));
		result.insert(make_pair(65, 77));
		result.insert(make_pair(65, 80));
		result.insert(make_pair(65, 81));
		result.insert(make_pair(65, 84));
		result.insert(make_pair(65, 85));
		result.insert(make_pair(65, 86));
		result.insert(make_pair(65, 87));
		result.insert(make_pair(65, 93));
		result.insert(make_pair(65, 94));
		result.insert(make_pair(65, 98));
		result.insert(make_pair(65, 100));
		result.insert(make_pair(66, 10));
		result.insert(make_pair(66, 21));
		result.insert(make_pair(66, 33));
		result.insert(make_pair(66, 36));
		result.insert(make_pair(66, 53));
		result.insert(make_pair(66, 56));
		result.insert(make_pair(66, 72));
		result.insert(make_pair(66, 78));
		result.insert(make_pair(66, 90));
		result.insert(make_pair(66, 95));
		result.insert(make_pair(66, 100));
		result.insert(make_pair(66, 103));
		result.insert(make_pair(66, 106));
		result.insert(make_pair(66, 111));
		result.insert(make_pair(66, 119));
		result.insert(make_pair(67, 10));
		result.insert(make_pair(67, 19));
		result.insert(make_pair(67, 20));
		result.insert(make_pair(67, 30));
		result.insert(make_pair(67, 33));
		result.insert(make_pair(67, 36));
		result.insert(make_pair(67, 39));
		result.insert(make_pair(67, 43));
		result.insert(make_pair(67, 68));
		result.insert(make_pair(67, 72));
		result.insert(make_pair(67, 78));
		result.insert(make_pair(67, 90));
		result.insert(make_pair(68, 32));
		result.insert(make_pair(68, 33));
		result.insert(make_pair(68, 36));
		result.insert(make_pair(68, 48));
		result.insert(make_pair(68, 49));
		result.insert(make_pair(68, 50));
		result.insert(make_pair(68, 52));
		result.insert(make_pair(68, 55));
		result.insert(make_pair(68, 58));
		result.insert(make_pair(68, 62));
		result.insert(make_pair(68, 69));
		result.insert(make_pair(68, 72));
		result.insert(make_pair(68, 75));
		result.insert(make_pair(68, 79));
		result.insert(make_pair(68, 80));
		result.insert(make_pair(68, 82));
		result.insert(make_pair(68, 85));
		result.insert(make_pair(68, 88));
		result.insert(make_pair(68, 90));
		result.insert(make_pair(68, 92));
		result.insert(make_pair(68, 96));
		result.insert(make_pair(68, 98));
		result.insert(make_pair(68, 101));
		result.insert(make_pair(68, 102));
		result.insert(make_pair(68, 111));
		result.insert(make_pair(68, 119));
		result.insert(make_pair(69, 21));
		result.insert(make_pair(69, 32));
		result.insert(make_pair(69, 44));
		result.insert(make_pair(69, 68));
		result.insert(make_pair(69, 72));
		result.insert(make_pair(69, 75));
		result.insert(make_pair(69, 79));
		result.insert(make_pair(69, 95));
		result.insert(make_pair(69, 100));
		result.insert(make_pair(70, 21));
		result.insert(make_pair(70, 30));
		result.insert(make_pair(70, 33));
		result.insert(make_pair(70, 38));
		result.insert(make_pair(70, 42));
		result.insert(make_pair(70, 48));
		result.insert(make_pair(70, 49));
		result.insert(make_pair(70, 50));
		result.insert(make_pair(70, 52));
		result.insert(make_pair(70, 55));
		result.insert(make_pair(70, 58));
		result.insert(make_pair(70, 62));
		result.insert(make_pair(70, 69));
		result.insert(make_pair(70, 70));
		result.insert(make_pair(70, 72));
		result.insert(make_pair(70, 78));
		result.insert(make_pair(70, 90));
		result.insert(make_pair(70, 111));
		result.insert(make_pair(71, 21));
		result.insert(make_pair(71, 32));
		result.insert(make_pair(71, 36));
		result.insert(make_pair(71, 44));
		result.insert(make_pair(71, 53));
		result.insert(make_pair(71, 56));
		result.insert(make_pair(71, 68));
		result.insert(make_pair(71, 70));
		result.insert(make_pair(71, 72));
		result.insert(make_pair(71, 78));
		result.insert(make_pair(71, 79));
		result.insert(make_pair(71, 95));
		result.insert(make_pair(71, 100));
		result.insert(make_pair(72, 33));
		result.insert(make_pair(72, 36));
		result.insert(make_pair(72, 39));
		result.insert(make_pair(72, 53));
		result.insert(make_pair(72, 56));
		result.insert(make_pair(72, 58));
		result.insert(make_pair(72, 62));
		result.insert(make_pair(72, 63));
		result.insert(make_pair(72, 68));
		result.insert(make_pair(72, 72));
		result.insert(make_pair(72, 90));
		result.insert(make_pair(72, 92));
		result.insert(make_pair(73, 21));
		result.insert(make_pair(73, 32));
		result.insert(make_pair(73, 33));
		result.insert(make_pair(73, 36));
		result.insert(make_pair(73, 39));
		result.insert(make_pair(73, 68));
		result.insert(make_pair(73, 78));
		result.insert(make_pair(73, 111));
		result.insert(make_pair(74, 33));
		result.insert(make_pair(74, 36));
		result.insert(make_pair(74, 53));
		result.insert(make_pair(74, 111));
		result.insert(make_pair(75, 10));
		result.insert(make_pair(75, 12));
		result.insert(make_pair(75, 19));
		result.insert(make_pair(75, 33));
		result.insert(make_pair(75, 36));
		result.insert(make_pair(75, 42));
		result.insert(make_pair(75, 44));
		result.insert(make_pair(75, 45));
		result.insert(make_pair(75, 48));
		result.insert(make_pair(75, 56));
		result.insert(make_pair(75, 57));
		result.insert(make_pair(75, 70));
		result.insert(make_pair(75, 74));
		result.insert(make_pair(75, 79));
		result.insert(make_pair(75, 82));
		result.insert(make_pair(75, 84));
		result.insert(make_pair(75, 92));
		result.insert(make_pair(75, 94));
		result.insert(make_pair(75, 101));
		result.insert(make_pair(75, 105));
		result.insert(make_pair(75, 107));
		result.insert(make_pair(75, 108));
		result.insert(make_pair(75, 109));
		result.insert(make_pair(75, 119));
		result.insert(make_pair(76, 53));
		result.insert(make_pair(76, 68));
		result.insert(make_pair(76, 72));
		result.insert(make_pair(76, 79));
		result.insert(make_pair(76, 99));
		result.insert(make_pair(76, 100));
		result.insert(make_pair(76, 111));
		result.insert(make_pair(77, 5));
		result.insert(make_pair(77, 10));
		result.insert(make_pair(77, 12));
		result.insert(make_pair(77, 14));
		result.insert(make_pair(77, 15));
		result.insert(make_pair(77, 19));
		result.insert(make_pair(77, 21));
		result.insert(make_pair(77, 22));
		result.insert(make_pair(77, 23));
		result.insert(make_pair(77, 26));
		result.insert(make_pair(77, 27));
		result.insert(make_pair(77, 29));
		result.insert(make_pair(77, 30));
		result.insert(make_pair(77, 32));
		result.insert(make_pair(77, 33));
		result.insert(make_pair(77, 36));
		result.insert(make_pair(77, 37));
		result.insert(make_pair(77, 40));
		result.insert(make_pair(77, 41));
		result.insert(make_pair(77, 42));
		result.insert(make_pair(77, 45));
		result.insert(make_pair(77, 72));
		result.insert(make_pair(77, 78));
		result.insert(make_pair(77, 99));
		result.insert(make_pair(77, 100));
		result.insert(make_pair(77, 111));
		result.insert(make_pair(78, 62));
		result.insert(make_pair(78, 63));
		result.insert(make_pair(78, 71));
		result.insert(make_pair(78, 75));
		result.insert(make_pair(78, 77));
		result.insert(make_pair(78, 80));
		result.insert(make_pair(78, 84));
		result.insert(make_pair(78, 87));
		result.insert(make_pair(78, 88));
		result.insert(make_pair(78, 94));
		result.insert(make_pair(78, 96));
		result.insert(make_pair(78, 98));
		result.insert(make_pair(78, 100));
		result.insert(make_pair(79, 33));
		result.insert(make_pair(79, 36));
		result.insert(make_pair(79, 42));
		result.insert(make_pair(79, 50));
		result.insert(make_pair(79, 53));
		result.insert(make_pair(79, 55));
		result.insert(make_pair(79, 58));
		result.insert(make_pair(79, 72));
		result.insert(make_pair(79, 79));
		result.insert(make_pair(80, 3));
		result.insert(make_pair(80, 36));
		result.insert(make_pair(80, 44));
		result.insert(make_pair(80, 45));
		result.insert(make_pair(80, 49));
		result.insert(make_pair(80, 55));
		result.insert(make_pair(80, 68));
		result.insert(make_pair(80, 72));
		result.insert(make_pair(80, 78));
		result.insert(make_pair(80, 79));
		result.insert(make_pair(80, 83));
		result.insert(make_pair(80, 86));
		result.insert(make_pair(80, 99));
		result.insert(make_pair(80, 100));
		result.insert(make_pair(80, 103));
		result.insert(make_pair(80, 106));
		result.insert(make_pair(80, 111));
		result.insert(make_pair(81, 33));
		result.insert(make_pair(81, 36));
		result.insert(make_pair(81, 44));
		result.insert(make_pair(81, 45));
		result.insert(make_pair(81, 49));
		result.insert(make_pair(81, 55));
		result.insert(make_pair(81, 57));
		result.insert(make_pair(81, 61));
		result.insert(make_pair(81, 69));
		result.insert(make_pair(81, 111));
		result.insert(make_pair(82, 42));
		result.insert(make_pair(82, 44));
		result.insert(make_pair(82, 45));
		result.insert(make_pair(82, 48));
		result.insert(make_pair(82, 49));
		result.insert(make_pair(82, 50));
		result.insert(make_pair(82, 52));
		result.insert(make_pair(82, 54));
		result.insert(make_pair(82, 55));
		result.insert(make_pair(82, 56));
		result.insert(make_pair(82, 57));
		result.insert(make_pair(82, 61));
		result.insert(make_pair(82, 66));
		result.insert(make_pair(82, 68));
		result.insert(make_pair(82, 72));
		result.insert(make_pair(82, 111));
		result.insert(make_pair(83, 3));
		result.insert(make_pair(83, 36));
		result.insert(make_pair(83, 45));
		result.insert(make_pair(83, 49));
		result.insert(make_pair(83, 72));
		result.insert(make_pair(83, 78));
		result.insert(make_pair(83, 83));
		result.insert(make_pair(83, 86));
		result.insert(make_pair(83, 94));
		result.insert(make_pair(83, 95));
		result.insert(make_pair(83, 96));
		result.insert(make_pair(83, 97));
		result.insert(make_pair(83, 98));
		result.insert(make_pair(83, 99));
		result.insert(make_pair(83, 100));
		result.insert(make_pair(83, 101));
		result.insert(make_pair(83, 102));
		result.insert(make_pair(83, 103));
		result.insert(make_pair(83, 104));
		result.insert(make_pair(83, 105));
		result.insert(make_pair(83, 106));
		result.insert(make_pair(83, 107));
		result.insert(make_pair(83, 108));
		result.insert(make_pair(83, 109));
		result.insert(make_pair(83, 110));
		result.insert(make_pair(83, 111));
		result.insert(make_pair(83, 112));
		result.insert(make_pair(83, 117));
		result.insert(make_pair(83, 122));
		result.insert(make_pair(83, 124));
		result.insert(make_pair(84, 3));
		result.insert(make_pair(84, 10));
		result.insert(make_pair(84, 19));
		result.insert(make_pair(84, 33));
		result.insert(make_pair(84, 36));
		result.insert(make_pair(84, 45));
		result.insert(make_pair(84, 49));
		result.insert(make_pair(84, 94));
		result.insert(make_pair(85, 3));
		result.insert(make_pair(85, 10));
		result.insert(make_pair(85, 33));
		result.insert(make_pair(85, 62));
		result.insert(make_pair(85, 63));
		result.insert(make_pair(85, 72));
		result.insert(make_pair(85, 78));
		result.insert(make_pair(85, 94));
		result.insert(make_pair(85, 100));
		result.insert(make_pair(85, 111));
		result.insert(make_pair(86, 99));
		result.insert(make_pair(86, 100));
		result.insert(make_pair(86, 103));
		result.insert(make_pair(86, 111));
		result.insert(make_pair(86, 124));
		result.insert(make_pair(87, 18));
		result.insert(make_pair(87, 22));
		result.insert(make_pair(87, 29));
		result.insert(make_pair(87, 30));
		result.insert(make_pair(87, 37));
		result.insert(make_pair(87, 39));
		result.insert(make_pair(87, 72));
		result.insert(make_pair(87, 78));
		result.insert(make_pair(87, 94));
		result.insert(make_pair(88, 3));
		result.insert(make_pair(88, 10));
		result.insert(make_pair(88, 21));
		result.insert(make_pair(88, 32));
		result.insert(make_pair(88, 45));
		result.insert(make_pair(88, 49));
		result.insert(make_pair(88, 124));
		result.insert(make_pair(89, 3));
		result.insert(make_pair(89, 33));
		result.insert(make_pair(89, 36));
		result.insert(make_pair(89, 45));
		result.insert(make_pair(89, 66));
		result.insert(make_pair(89, 72));
		result.insert(make_pair(89, 78));
		result.insert(make_pair(89, 94));
		result.insert(make_pair(89, 100));
		result.insert(make_pair(89, 103));
		result.insert(make_pair(89, 104));
		result.insert(make_pair(89, 105));
		result.insert(make_pair(89, 107));
		result.insert(make_pair(89, 108));
		result.insert(make_pair(89, 109));
		result.insert(make_pair(89, 110));
		result.insert(make_pair(89, 112));
		result.insert(make_pair(89, 113));
		result.insert(make_pair(89, 115));
		result.insert(make_pair(89, 116));
		result.insert(make_pair(89, 117));
		result.insert(make_pair(90, 3));
		result.insert(make_pair(90, 10));
		result.insert(make_pair(90, 21));
		result.insert(make_pair(90, 33));
		result.insert(make_pair(90, 36));
		result.insert(make_pair(90, 72));
		result.insert(make_pair(90, 78));
		result.insert(make_pair(90, 94));
		result.insert(make_pair(90, 104));
		result.insert(make_pair(90, 118));
		result.insert(make_pair(91, 10));
		result.insert(make_pair(91, 33));
		result.insert(make_pair(91, 36));
		result.insert(make_pair(91, 37));
		result.insert(make_pair(91, 39));
		result.insert(make_pair(91, 41));
		result.insert(make_pair(91, 43));
		result.insert(make_pair(91, 48));
		result.insert(make_pair(91, 50));
		result.insert(make_pair(91, 52));
		result.insert(make_pair(91, 54));
		result.insert(make_pair(91, 56));
		result.insert(make_pair(91, 57));
		result.insert(make_pair(91, 59));
		result.insert(make_pair(91, 61));
		result.insert(make_pair(91, 65));
		result.insert(make_pair(91, 69));
		result.insert(make_pair(91, 72));
		result.insert(make_pair(91, 74));
		result.insert(make_pair(91, 76));
		result.insert(make_pair(91, 79));
		result.insert(make_pair(91, 81));
		result.insert(make_pair(91, 82));
		result.insert(make_pair(91, 85));
		result.insert(make_pair(91, 89));
		result.insert(make_pair(91, 90));
		result.insert(make_pair(91, 91));
		result.insert(make_pair(91, 94));
		result.insert(make_pair(91, 96));
		result.insert(make_pair(91, 98));
		result.insert(make_pair(92, 10));
		result.insert(make_pair(92, 19));
		result.insert(make_pair(92, 33));
		result.insert(make_pair(92, 45));
		result.insert(make_pair(92, 72));
		result.insert(make_pair(92, 94));
		result.insert(make_pair(92, 103));
		result.insert(make_pair(92, 104));
		result.insert(make_pair(92, 111));
		result.insert(make_pair(92, 118));
		result.insert(make_pair(93, 10));
		result.insert(make_pair(93, 19));
		result.insert(make_pair(93, 33));
		result.insert(make_pair(93, 45));
		result.insert(make_pair(93, 57));
		result.insert(make_pair(93, 70));
		result.insert(make_pair(93, 79));
		result.insert(make_pair(93, 83));
		result.insert(make_pair(93, 86));
		result.insert(make_pair(93, 99));
		result.insert(make_pair(93, 118));
		result.insert(make_pair(93, 124));
		result.insert(make_pair(94, 3));
		result.insert(make_pair(94, 10));
		result.insert(make_pair(94, 11));
		result.insert(make_pair(94, 14));
		result.insert(make_pair(94, 15));
		result.insert(make_pair(94, 18));
		result.insert(make_pair(94, 26));
		result.insert(make_pair(94, 29));
		result.insert(make_pair(94, 30));
		result.insert(make_pair(94, 32));
		result.insert(make_pair(94, 38));
		result.insert(make_pair(94, 45));
		result.insert(make_pair(94, 49));
		result.insert(make_pair(94, 58));
		result.insert(make_pair(94, 66));
		result.insert(make_pair(94, 96));
		result.insert(make_pair(94, 98));
		result.insert(make_pair(94, 101));
		result.insert(make_pair(94, 105));
		result.insert(make_pair(94, 106));
		result.insert(make_pair(94, 107));
		result.insert(make_pair(94, 109));
		result.insert(make_pair(94, 111));
		result.insert(make_pair(94, 118));
		result.insert(make_pair(94, 124));
		result.insert(make_pair(95, 3));
		result.insert(make_pair(95, 21));
		result.insert(make_pair(95, 33));
		result.insert(make_pair(95, 45));
		result.insert(make_pair(95, 49));
		result.insert(make_pair(95, 66));
		result.insert(make_pair(95, 118));
		result.insert(make_pair(95, 124));
		result.insert(make_pair(96, 21));
		result.insert(make_pair(96, 33));
		result.insert(make_pair(96, 38));
		result.insert(make_pair(96, 45));
		result.insert(make_pair(96, 48));
		result.insert(make_pair(96, 49));
		result.insert(make_pair(96, 50));
		result.insert(make_pair(96, 51));
		result.insert(make_pair(96, 52));
		result.insert(make_pair(96, 54));
		result.insert(make_pair(96, 56));
		result.insert(make_pair(96, 57));
		result.insert(make_pair(96, 69));
		result.insert(make_pair(96, 72));
		result.insert(make_pair(96, 74));
		result.insert(make_pair(96, 79));
		result.insert(make_pair(96, 81));
		result.insert(make_pair(96, 83));
		result.insert(make_pair(96, 85));
		result.insert(make_pair(96, 86));
		result.insert(make_pair(96, 88));
		result.insert(make_pair(96, 89));
		result.insert(make_pair(96, 91));
		result.insert(make_pair(96, 96));
		result.insert(make_pair(96, 98));
		result.insert(make_pair(96, 99));
		result.insert(make_pair(96, 101));
		result.insert(make_pair(96, 103));
		result.insert(make_pair(96, 106));
		result.insert(make_pair(96, 118));
		result.insert(make_pair(96, 124));
		result.insert(make_pair(97, 17));
		result.insert(make_pair(97, 23));
		result.insert(make_pair(97, 24));
		result.insert(make_pair(97, 29));
		result.insert(make_pair(97, 30));
		result.insert(make_pair(97, 32));
		result.insert(make_pair(97, 33));
		result.insert(make_pair(97, 35));
		result.insert(make_pair(97, 37));
		result.insert(make_pair(97, 38));
		result.insert(make_pair(97, 48));
		result.insert(make_pair(97, 49));
		result.insert(make_pair(97, 50));
		result.insert(make_pair(97, 52));
		result.insert(make_pair(97, 57));
		result.insert(make_pair(97, 61));
		result.insert(make_pair(97, 62));
		result.insert(make_pair(97, 66));
		result.insert(make_pair(97, 67));
		result.insert(make_pair(97, 68));
		result.insert(make_pair(97, 70));
		result.insert(make_pair(97, 71));
		result.insert(make_pair(97, 72));
		result.insert(make_pair(97, 75));
		result.insert(make_pair(97, 77));
		result.insert(make_pair(97, 80));
		result.insert(make_pair(97, 118));
		result.insert(make_pair(97, 124));
		result.insert(make_pair(98, 21));
		result.insert(make_pair(98, 45));
		result.insert(make_pair(98, 49));
		result.insert(make_pair(98, 72));
		result.insert(make_pair(98, 73));
		result.insert(make_pair(98, 74));
		result.insert(make_pair(98, 76));
		result.insert(make_pair(98, 77));
		result.insert(make_pair(98, 79));
		result.insert(make_pair(98, 81));
		result.insert(make_pair(98, 82));
		result.insert(make_pair(98, 83));
		result.insert(make_pair(98, 85));
		result.insert(make_pair(98, 86));
		result.insert(make_pair(98, 88));
		result.insert(make_pair(98, 89));
		result.insert(make_pair(98, 90));
		result.insert(make_pair(98, 91));
		result.insert(make_pair(98, 92));
		result.insert(make_pair(98, 93));
		result.insert(make_pair(98, 95));
		result.insert(make_pair(98, 96));
		result.insert(make_pair(98, 98));
		result.insert(make_pair(98, 99));
		result.insert(make_pair(98, 101));
		result.insert(make_pair(98, 103));
		result.insert(make_pair(98, 105));
		result.insert(make_pair(98, 107));
		result.insert(make_pair(98, 108));
		result.insert(make_pair(98, 109));
		result.insert(make_pair(98, 111));
		result.insert(make_pair(98, 115));
		result.insert(make_pair(98, 118));
		result.insert(make_pair(100, 3));
		result.insert(make_pair(100, 15));
		result.insert(make_pair(100, 19));
		result.insert(make_pair(100, 29));
		result.insert(make_pair(100, 37));
		result.insert(make_pair(100, 38));
		result.insert(make_pair(100, 39));
		result.insert(make_pair(100, 48));
		result.insert(make_pair(100, 49));
		result.insert(make_pair(100, 50));
		result.insert(make_pair(100, 51));
		result.insert(make_pair(100, 52));
		result.insert(make_pair(100, 54));
		result.insert(make_pair(100, 56));
		result.insert(make_pair(100, 57));
		result.insert(make_pair(100, 79));
		result.insert(make_pair(100, 85));
		result.insert(make_pair(100, 88));
		result.insert(make_pair(100, 89));
		result.insert(make_pair(100, 91));
		result.insert(make_pair(100, 96));
		result.insert(make_pair(100, 104));
		result.insert(make_pair(101, 21));
		result.insert(make_pair(101, 45));
		result.insert(make_pair(101, 49));
		result.insert(make_pair(101, 83));
		result.insert(make_pair(101, 124));
		result.insert(make_pair(102, 45));
		result.insert(make_pair(102, 83));
		result.insert(make_pair(102, 86));
		result.insert(make_pair(102, 104));
		result.insert(make_pair(103, 21));
		result.insert(make_pair(103, 45));
		result.insert(make_pair(103, 49));
		result.insert(make_pair(103, 104));
		result.insert(make_pair(104, 15));
		result.insert(make_pair(104, 20));
		result.insert(make_pair(104, 21));
		result.insert(make_pair(104, 33));
		result.insert(make_pair(104, 45));
		result.insert(make_pair(104, 49));
		result.insert(make_pair(104, 124));
		result.insert(make_pair(105, 3));
		result.insert(make_pair(105, 21));
		result.insert(make_pair(105, 58));
		result.insert(make_pair(105, 79));
		result.insert(make_pair(105, 105));
		result.insert(make_pair(106, 3));
		result.insert(make_pair(106, 5));
		result.insert(make_pair(106, 9));
		result.insert(make_pair(106, 11));
		result.insert(make_pair(106, 12));
		result.insert(make_pair(106, 13));
		result.insert(make_pair(106, 14));
		result.insert(make_pair(106, 17));
		result.insert(make_pair(106, 18));
		result.insert(make_pair(106, 19));
		result.insert(make_pair(106, 21));
		result.insert(make_pair(106, 45));
		result.insert(make_pair(106, 83));
		result.insert(make_pair(106, 86));
		result.insert(make_pair(107, 15));
		result.insert(make_pair(107, 20));
		result.insert(make_pair(107, 33));
		result.insert(make_pair(107, 78));
		result.insert(make_pair(107, 104));
		result.insert(make_pair(108, 17));
		result.insert(make_pair(108, 18));
		result.insert(make_pair(108, 19));
		result.insert(make_pair(108, 26));
		result.insert(make_pair(108, 29));
		result.insert(make_pair(108, 31));
		result.insert(make_pair(108, 34));
		result.insert(make_pair(108, 37));
		result.insert(make_pair(108, 38));
		result.insert(make_pair(108, 39));
		result.insert(make_pair(108, 40));
		result.insert(make_pair(108, 41));
		result.insert(make_pair(108, 48));
		result.insert(make_pair(108, 49));
		result.insert(make_pair(108, 83));
		result.insert(make_pair(108, 86));
		result.insert(make_pair(108, 124));
		result.insert(make_pair(109, 20));
		result.insert(make_pair(109, 33));
		result.insert(make_pair(109, 45));
		result.insert(make_pair(109, 78));
		result.insert(make_pair(109, 104));
		result.insert(make_pair(110, 20));
		result.insert(make_pair(110, 38));
		result.insert(make_pair(110, 48));
		result.insert(make_pair(110, 57));
		result.insert(make_pair(110, 58));
		result.insert(make_pair(110, 72));
		result.insert(make_pair(110, 78));
		result.insert(make_pair(110, 79));
		result.insert(make_pair(110, 86));
		result.insert(make_pair(111, 45));
		result.insert(make_pair(111, 83));
		result.insert(make_pair(112, 33));
		result.insert(make_pair(112, 45));
		result.insert(make_pair(112, 78));
		result.insert(make_pair(113, 61));
		result.insert(make_pair(113, 65));
		result.insert(make_pair(113, 71));
		result.insert(make_pair(113, 72));
		result.insert(make_pair(113, 75));
		result.insert(make_pair(113, 77));
		result.insert(make_pair(113, 84));
		result.insert(make_pair(113, 107));
		result.insert(make_pair(113, 108));
		result.insert(make_pair(113, 111));
		result.insert(make_pair(113, 119));
		result.insert(make_pair(114, 33));
		result.insert(make_pair(114, 45));
		result.insert(make_pair(114, 49));
		result.insert(make_pair(114, 83));
		result.insert(make_pair(114, 87));
		result.insert(make_pair(115, 45));
		result.insert(make_pair(116, 45));
		result.insert(make_pair(116, 78));
		result.insert(make_pair(117, 16));
		result.insert(make_pair(117, 17));
		result.insert(make_pair(117, 18));
		result.insert(make_pair(117, 32));
		result.insert(make_pair(117, 37));
		result.insert(make_pair(117, 40));
		result.insert(make_pair(117, 42));
		result.insert(make_pair(117, 44));
		result.insert(make_pair(117, 46));
		result.insert(make_pair(117, 48));
		result.insert(make_pair(117, 52));
		result.insert(make_pair(117, 59));
		result.insert(make_pair(117, 65));
		result.insert(make_pair(117, 66));
		result.insert(make_pair(117, 69));
		result.insert(make_pair(117, 71));
		result.insert(make_pair(117, 72));
		result.insert(make_pair(117, 74));
		result.insert(make_pair(117, 75));
		result.insert(make_pair(117, 77));
		result.insert(make_pair(117, 78));
		result.insert(make_pair(117, 81));
		result.insert(make_pair(117, 84));
		result.insert(make_pair(117, 88));
		result.insert(make_pair(117, 90));
		result.insert(make_pair(117, 96));
		result.insert(make_pair(118, 14));
		result.insert(make_pair(118, 33));
		result.insert(make_pair(119, 14));
		result.insert(make_pair(119, 33));
		result.insert(make_pair(119, 49));
		result.insert(make_pair(119, 52));
		result.insert(make_pair(119, 54));
		result.insert(make_pair(119, 57));
		result.insert(make_pair(119, 58));
		result.insert(make_pair(119, 59));
		result.insert(make_pair(119, 74));
		result.insert(make_pair(119, 78));
		result.insert(make_pair(119, 79));
		result.insert(make_pair(119, 83));
		result.insert(make_pair(119, 87));
		result.insert(make_pair(119, 98));
		result.insert(make_pair(120, 45));
		result.insert(make_pair(120, 87));
		result.insert(make_pair(120, 98));
		result.insert(make_pair(121, 45));
		result.insert(make_pair(121, 98));
		result.insert(make_pair(122, 34));
		result.insert(make_pair(122, 39));
		result.insert(make_pair(122, 40));
		result.insert(make_pair(122, 41));
		result.insert(make_pair(122, 47));
		result.insert(make_pair(122, 48));
		result.insert(make_pair(122, 49));
		result.insert(make_pair(122, 52));
		result.insert(make_pair(122, 54));
		result.insert(make_pair(122, 57));
		result.insert(make_pair(122, 58));
		result.insert(make_pair(122, 59));
		result.insert(make_pair(122, 69));
		result.insert(make_pair(122, 74));
		result.insert(make_pair(122, 78));
		result.insert(make_pair(122, 79));
		result.insert(make_pair(122, 86));
		result.insert(make_pair(123, 45));
		result.insert(make_pair(124, 15));
		result.insert(make_pair(124, 16));
		result.insert(make_pair(124, 17));
		result.insert(make_pair(124, 19));
		result.insert(make_pair(124, 20));
		result.insert(make_pair(124, 24));
		result.insert(make_pair(124, 25));
		result.insert(make_pair(124, 26));
		result.insert(make_pair(124, 27));
		result.insert(make_pair(124, 30));
		result.insert(make_pair(124, 32));
		result.insert(make_pair(124, 34));
		result.insert(make_pair(124, 39));
		result.insert(make_pair(124, 40));
		result.insert(make_pair(124, 41));
		result.insert(make_pair(124, 44));
		result.insert(make_pair(124, 78));
		result.insert(make_pair(125, 78));
		result.insert(make_pair(125, 87));
		result.insert(make_pair(125, 89));
		result.insert(make_pair(125, 95));
		result.insert(make_pair(125, 96));
		result.insert(make_pair(125, 98));
		return result;
}
